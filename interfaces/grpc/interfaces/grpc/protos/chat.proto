syntax = "proto3";

package lumi_pilot.chat;

// AI对话服务
service ChatService {
  // 发送消息进行AI对话
  rpc Chat(ChatRequest) returns (ChatResponse);
  
  // 流式对话（可选，暂时返回普通响应）
  rpc StreamChat(ChatRequest) returns (stream ChatStreamResponse);
}

// 对话请求
message ChatRequest {
  string message = 1;                    // 用户消息内容
  optional string system_prompt = 2;     // 自定义系统提示词
  optional string character = 3;         // 角色名称
  optional float temperature = 4;        // 温度参数
  optional int32 max_tokens = 5;         // 最大token数
}

// 对话响应
message ChatResponse {
  bool success = 1;                      // 是否成功
  string message = 2;                    // AI回复内容（成功时）
  string error = 3;                      // 错误信息（失败时）
  ChatMetadata metadata = 4;             // 响应元数据
}

// 流式对话响应
message ChatStreamResponse {
  string chunk = 1;                      // 响应片段
  bool is_final = 2;                     // 是否为最后一个片段
  ChatMetadata metadata = 3;             // 元数据（仅在最后一个片段中包含）
}

// 对话元数据
message ChatMetadata {
  string request_id = 1;                 // 请求ID
  string model = 2;                      // 使用的模型
  int32 input_length = 3;                // 输入长度
  int32 response_length = 4;             // 响应长度
  double duration = 5;                   // 处理时长（秒）
  string timestamp = 6;                  // 时间戳
}